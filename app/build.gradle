buildscript {
    repositories {
        mavenCentral()
    }
}


apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.plugin.serialization'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'

def sign = new Properties()
sign.load(new FileInputStream(rootProject.file("keystore.properties")))

def preferencesSalt = project.hasProperty('preferencesSalt') ? preferencesSalt : "\"Salt\""
def preferencesKey = project.hasProperty('preferencesKey') ? preferencesKey : "\"Key\""

android {

    ndkVersion "21.3.6528147"
    compileSdkVersion rootProject.compileSdk
    useLibrary 'org.apache.http.legacy'
    
    signingConfigs {
        release {
            storeFile file(sign['keyStore'])
            storePassword sign['storePassword']
            keyAlias sign['keyAlias']
            keyPassword sign['keyPassword']
        }
    }

    buildFeatures {
        buildConfig = true
        viewBinding = true
        dataBinding = false
    }
    dexOptions {
        javaMaxHeapSize "4g"
        incremental true
        preDexLibraries true
    }

    defaultConfig {
        minSdkVersion rootProject.minSdk
        targetSdkVersion rootProject.targetSdk
        applicationId "com.vpn.prime"
        versionCode 5
        versionName "1.0." + versionCode
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        javaCompileOptions.annotationProcessorOptions {
            arguments['dagger.android.experimentalUseStringKeys'] = 'true'
        }

        buildConfigField "String", "PREF_SALT", preferencesSalt
        buildConfigField "String", "PREF_KEY", preferencesKey

        resConfigs "en", "de", "es-rES", "es-rMX", "fa", "fr", "it", "nl", "pl", "pt-rBR", "pt-rPT", "ru"
    }

    buildTypes {
        release {
            minifyEnabled rootProject.minifyOnRelease
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            ndk {
                debugSymbolLevel 'SYMBOL_TABLE'
            }
        }

        debug {
            minifyEnabled rootProject.minifyOnDebug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE.md'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/AL2.0'
    }

    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets', 'assets', 'ovpnlibs/assets', '../openvpn/build/ovpnassets']
        }
        test {
            java.srcDirs += "$projectDir/src/sharedTest/java"
        }
        androidTest {
            java.srcDirs += "$projectDir/src/sharedTest/java"
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
        // There are internal compiler errors with new inference engine. Let's wait with enabling
        // that.
        freeCompilerArgs += ["-XXLanguage:-NewInference"]
    }

    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }
}

//ext.abiCodes = ['armeabi-v7a': 1, 'arm64-v8a': 2, x86: 3, x86_64: 4]
//
//android.applicationVariants.all { variant ->
//    variant.outputs.each { output ->
//        def abiCode = project.ext.abiCodes.get(output.getFilter(com.android.build.OutputFile.ABI))
//        if (abiCode != null) {
//            output.versionCodeOverride = Helpers.getVersionCode(abiCode)
//        }
//    }
//}

kapt {
    arguments {
        arg('dagger.android.experimentalUseStringKeys')
    }
}

repositories {
    maven { url "https://clojars.org/repo/" }
    google()
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    debugImplementation 'androidx.test.espresso.idling:idling-concurrent:3.3.0'
    debugImplementation('com.jakewharton.espresso:okhttp3-idling-resource:1.0.0') {
        exclude module: 'support-annotations'
    }

    //maybe later
    //implementation 'com.squareup.leakcanary:leakcanary-object-watcher-android:2.6'
    //debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.6'

    implementation 'androidx.test.espresso:espresso-idling-resource:3.3.0'
    // 3.10 of commons-lang3 causes NoClassDefFoundError on start (to be investigated)
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'commons-codec:commons-codec:1.14'
    implementation 'com.qozix:tileview:2.2.7'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'
    implementation 'com.jakewharton:butterknife:10.2.3'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.github.lzyzsd:circleprogress:1.2.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation "androidx.activity:activity-ktx:1.2.0-rc01"
    implementation 'com.daimajia.easing:library:2.4@aar'
    implementation "androidx.activity:activity-ktx:1.1.0"
    implementation 'androidx.fragment:fragment-ktx:1.3.0-rc01'
    implementation 'com.squareup:otto:1.3.8'
    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.github.shts:TriangleLabelView:1.1.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.jakewharton.rxbinding2:rxbinding-design:2.2.0'
    implementation 'com.scottyab:aes-crypto:0.0.5'
    implementation 'com.getkeepsafe.taptargetview:taptargetview:1.11.0'
    implementation 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:2.3.0'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'com.github.clans:fab:1.6.4'
    implementation 'net.danlew:android.joda:2.10.6'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.github.anrwatchdog:anrwatchdog:1.4.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.getkeepsafe.relinker:relinker:1.3.1'
    implementation 'me.relex:circleindicator:1.2.2@aar'
    implementation 'com.github.douglasjunior:android-simple-tooltip:0.2.3'
    implementation 'ru.egslava:MaskedEditText:1.0.5'
    implementation 'androidx.work:work-runtime:2.4.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-rx2:1.4.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'
    implementation 'com.xwray:groupie:2.7.2'
    implementation 'com.xwray:groupie-databinding:2.7.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'org.minidns:minidns-hla:1.0.0'
    implementation 'com.github.tony19:logback-android:2.0.0'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.1'
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation 'com.airbnb.android:lottie:3.7.0'


    //New
    implementation "com.jakewharton.timber:timber:4.7.1"
    implementation project(":exts")
    implementation "com.github.pzienowicz:androidx-auto-scroll-view-pager:1.2.0"
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.5"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.5"

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    // Proton Core libs
    implementation "me.proton.core:util-kotlin:0.2.4"
    implementation "me.proton.core:domain:0.2.4"
    implementation project(":network-data")
    implementation project(":network-domain")

    // https://github.com/grpc/grpc-java/issues/3633 https://github.com/google/dagger/issues/1449
    implementation 'com.github.pengrad:jdk9-deps:1.0'

    // Dagger dependencies
    implementation "com.google.dagger:dagger-android:$glversions.dagger"
    implementation "com.google.dagger:dagger-android-support:$glversions.dagger"
    annotationProcessor "com.google.dagger:dagger-android-processor:$glversions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$glversions.dagger"
    kapt "com.google.dagger:dagger-compiler:$glversions.dagger"

    kapt 'com.jakewharton:butterknife-compiler:10.2.3'
    kapt 'com.evernote:android-state-processor:1.4.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Test dependencies
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$glversions.dagger"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$glversions.dagger"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$glversions.dagger"

    testImplementation 'joda-time:joda-time:2.10.6'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'io.mockk:mockk:1.10.6'
    androidTestImplementation 'io.mockk:mockk-android:1.10.6'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.1'

    androidTestImplementation('androidx.test.espresso:espresso-idling-resource:3.3.0') {
        exclude module: 'support-annotations'
    }
    androidTestImplementation 'com.azimolabs.conditionwatcher:conditionwatcher:0.2'

    // Core library
    androidTestImplementation 'androidx.test:core:1.3.0'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.1'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.ext:truth:1.3.0'
    androidTestImplementation 'com.google.truth:truth:1.1'

    //RxAndroid
    implementation "io.reactivex.rxjava2:rxjava:$glversions.rxjava2"
    implementation "io.reactivex.rxjava2:rxandroid:$glversions.rxandroid"
    implementation "com.jakewharton.rxrelay2:rxrelay:$glversions.rxrelay"

    //Firebase
    implementation platform("com.google.firebase:firebase-bom:$glversions.firebase")
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-core'
    implementation 'com.google.firebase:firebase-config'

    //Analytics
    //AppMetrica
    implementation Libs.yandex.appmetrica
    //Facebook
    implementation Libs.facebook.core

    implementation "com.google.android.play:core:$glversions.playcore"

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.3.0'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

    implementation "com.github.johnpersano:supertoasts:$glversions.supertoasts"

    implementation project(path: ':openvpn')
}

//Uncomment when google-services.json will be added
//apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.google.firebase.crashlytics'